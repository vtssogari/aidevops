---
# tasks file for download-static
- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{download_folder}}/"
    state: directory
    mode: '0755'

- name: Download helm
  get_url:  
    url:  "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/helm-{{ helm_version }}-linux-amd64.tar.gz"
    method: PUT
    src: "{{ download_folder }}/helm-{{ helm_version }}-linux-amd64.tar.gz"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201
      
- name: Download docker_compose_url
  get_url:
    url:  "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-Linux-x86_64"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/docker-compose-Linux-x86_64"
    method: PUT
    src: "{{ download_folder }}/docker-compose-Linux-x86_64"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201
      
- name: Download ksonnet_url
  get_url:
    url:  "https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/ks_0.13.1_linux_amd64.tar.gz"
    method: PUT
    src: "{{ download_folder }}/ks_0.13.1_linux_amd64.tar.gz"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201

- name: Download kubectl_url
  get_url:
    url:  "https://dl.k8s.io/release/{{ kube_version }}/bin/linux/amd64/kubectl"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/kubectl"
    method: PUT
    src: "{{ download_folder }}/kubectl"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201

- name: Download kubeadm_url
  get_url:
    url:  "https://dl.k8s.io/release/{{ kube_version }}/bin/linux/amd64/kubeadm"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/kubeadm"
    method: PUT
    src: "{{ download_folder }}/kubeadm"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201

#- name: Download hyperkube_url
#  get_url:
#    url:  "https://dl.k8s.io/release/{{ kube_version }}/bin/linux/amd64/hyperkube"
#    dest: "{{download_folder}}/"
- name: Download nvidia_k8s_device_plugin_url
  get_url: 
    url:  "https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/1.0.0-beta4/nvidia-device-plugin.yml"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/nvidia-device-plugin.yml"
    method: PUT
    src: "{{ download_folder }}/nvidia-device-plugin.yml"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201

- name: Download nvidia_docker_wrapper_url
  get_url:
    url:  "https://raw.githubusercontent.com/NVIDIA/nvidia-docker/master/nvidia-docker"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/nvidia-docker"
    method: PUT
    src: "{{ download_folder }}/nvidia-docker"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201

- name: Download cni_download_url
  get_url:
    url:  "https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz"
    dest: "{{download_folder}}/"
- name: Push file to nexus
  uri:
    url: "{{ nexus_url }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz"
    method: PUT
    src: "{{ download_folder }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz"
    user: "{{ user }}"
    password: "{{ password }}"
    force_basic_auth: yes
    headers:
      Content-Type: application/octet-stream  
    status_code:
      - 201    

